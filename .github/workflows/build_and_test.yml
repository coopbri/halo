name: Build & Test

on:
    push:
        branches:
            - master
            - major
            - minor
            - v2.x
    pull_request:
        branches:
            - master
            - major
            - minor
env:
    CI: true
jobs:
    build:
        name: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: oven-sh/setup-bun@v2
            - name: bun install
              run: |
                  bun install
                  bun install --os=linux --cpu=x64 sharp
            - name: Build
              run: bun run build
    unit-tests:
        name: unit tests
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: oven-sh/setup-bun@v2
            - name: bun install
              run: |
                  bun install
                  bun install --os=linux --cpu=x64 sharp
            - name: Build
              run: lerna run ci
            - name: Unit tests
              run: bun run test
    e2e-tests:
        name: e2e tests
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: admin
                    POSTGRES_PASSWORD: secret
                ports:
                    - 5432
                options: --health-cmd=pg_isready --health-interval=10s --health-timeout=5s --health-retries=3
            elastic:
                image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
                env:
                    discovery.type: single-node
                    bootstrap.memory_lock: true
                    ES_JAVA_OPTS: -Xms512m -Xmx512m
                    # Elasticsearch will force read-only mode when total available disk space is less than 5%. Since we will
                    # be running on a shared Azure instance with 84GB SSD, we easily go below 5% available even when there are still
                    # > 3GB free. So we set this value to an absolute one rather than a percentage to prevent all the Elasticsearch
                    # e2e tests from failing.
                    cluster.routing.allocation.disk.watermark.low: 500mb
                    cluster.routing.allocation.disk.watermark.high: 200mb
                    cluster.routing.allocation.disk.watermark.flood_stage: 100mb
                ports:
                    - 9200
                options: --health-cmd="curl --silent --fail localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=3
        strategy:
            fail-fast: false
            matrix:
                db: [sqljs, postgres]
        steps:
            - uses: actions/checkout@v3
            - uses: oven-sh/setup-bun@v2
            - name: bun install
              run: |
                  bun install
                  bun install --os=linux --cpu=x64 sharp
            - name: Build
              run: lerna run ci
            - name: df
              run: |
                  df -h
                  docker system df
            - name: e2e tests
              env:
                  E2E_POSTGRES_PORT: ${{ job.services.postgres.ports['5432'] }}
                  E2E_ELASTIC_PORT: ${{ job.services.elastic.ports['9200'] }}
                  DB: ${{ matrix.db }}
              run: bun run e2e
